// Please don't change this file. It's autogoenrated

#include <emscripten.h>

extern long emulate_SYS_restart_syscall(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_exit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fork(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_read(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_write(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_open(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_close(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_waitpid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_creat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_link(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_unlink(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_execve(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_chdir(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_time(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mknod(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_chmod(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lchown(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_break(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_oldstat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lseek(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getpid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mount(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_umount(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_stime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ptrace(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_alarm(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_oldfstat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pause(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_utime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_stty(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_gtty(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_access(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_nice(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ftime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sync(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_kill(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rename(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mkdir(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rmdir(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_dup(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pipe(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_times(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_prof(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_brk(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_signal(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_geteuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getegid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_acct(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_umount2(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lock(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ioctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fcntl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mpx(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setpgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ulimit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_oldolduname(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_umask(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_chroot(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ustat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_dup2(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getppid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getpgrp(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setsid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigaction(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sgetmask(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ssetmask(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setreuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setregid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigsuspend(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigpending(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sethostname(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setrlimit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getrlimit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getrusage(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_gettimeofday(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_settimeofday(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getgroups(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setgroups(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_select(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_symlink(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_oldlstat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_readlink(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_uselib(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_swapon(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_reboot(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_readdir(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mmap(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_munmap(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_truncate(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ftruncate(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchmod(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchown(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getpriority(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setpriority(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_profil(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_statfs(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fstatfs(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ioperm(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_socketcall(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_syslog(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setitimer(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getitimer(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_stat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lstat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fstat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_olduname(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_iopl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vhangup(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_idle(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vm86old(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_wait4(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_swapoff(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sysinfo(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ipc(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fsync(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigreturn(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clone(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setdomainname(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_uname(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_modify_ldt(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_adjtimex(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mprotect(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigprocmask(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_create_module(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_init_module(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_delete_module(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_get_kernel_syms(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_quotactl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getpgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchdir(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_bdflush(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sysfs(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_personality(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_afs_syscall(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setfsuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setfsgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS__llseek(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getdents(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS__newselect(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_flock(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_msync(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_readv(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_writev(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getsid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fdatasync(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS__sysctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mlock(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_munlock(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mlockall(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_munlockall(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_setparam(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_getparam(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_setscheduler(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_getscheduler(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_yield(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_get_priority_max(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_get_priority_min(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_rr_get_interval(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_nanosleep(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mremap(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setresuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getresuid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vm86(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_query_module(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_poll(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_nfsservctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setresgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getresgid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_prctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigreturn(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigaction(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigprocmask(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigpending(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigtimedwait(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigqueueinfo(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_rt_sigsuspend(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pread64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pwrite64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_chown(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getcwd(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_capget(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_capset(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sigaltstack(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sendfile(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getpmsg(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_putpmsg(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vfork(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ugetrlimit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mmap2(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_truncate64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ftruncate64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_stat64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lstat64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fstat64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lchown32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getgid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_geteuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getegid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setreuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setregid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getgroups32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setgroups32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchown32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setresuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getresuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setresgid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getresgid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_chown32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setgid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setfsuid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setfsgid32(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pivot_root(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mincore(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_madvise(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getdents64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fcntl64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_gettid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_readahead(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lsetxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fsetxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lgetxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fgetxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_listxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_llistxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_flistxattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_removexattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lremovexattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fremovexattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_tkill(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sendfile64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_futex(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_setaffinity(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sched_getaffinity(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_set_thread_area(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_get_thread_area(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_io_setup(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_io_destroy(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_io_getevents(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_io_submit(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_io_cancel(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fadvise64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_exit_group(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_lookup_dcookie(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_epoll_create(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_epoll_ctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_epoll_wait(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_remap_file_pages(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_set_tid_address(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timer_create(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timer_settime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timer_gettime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timer_getoverrun(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timer_delete(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clock_settime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clock_gettime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clock_getres(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clock_nanosleep(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_statfs64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fstatfs64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_tgkill(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_utimes(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fadvise64_64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vserver(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mbind(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_get_mempolicy(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_set_mempolicy(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_open(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_unlink(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_timedsend(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_timedreceive(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_notify(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mq_getsetattr(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_kexec_load(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_waitid(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_add_key(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_request_key(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_keyctl(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ioprio_set(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ioprio_get(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_inotify_init(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_inotify_add_watch(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_inotify_rm_watch(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_migrate_pages(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_openat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mkdirat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_mknodat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchownat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_futimesat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fstatat64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_unlinkat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_renameat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_linkat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_symlinkat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_readlinkat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fchmodat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_faccessat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pselect6(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_ppoll(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_unshare(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_set_robust_list(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_get_robust_list(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_splice(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sync_file_range(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_tee(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_vmsplice(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_move_pages(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_getcpu(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_epoll_pwait(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_utimensat(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_signalfd(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timerfd_create(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_eventfd(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_fallocate(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timerfd_settime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_timerfd_gettime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_signalfd4(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_eventfd2(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_epoll_create1(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_dup3(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pipe2(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_inotify_init1(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_preadv(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_pwritev(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_prlimit64(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_name_to_handle_at(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_open_by_handle_at(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_clock_adjtime(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_syncfs(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_sendmmsg(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_setns(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_process_vm_readv(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_process_vm_writev(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_kcmp(long a1, long a2, long a3, long a4, long a5, long a6);
extern long emulate_SYS_finit_module(long a1, long a2, long a3, long a4, long a5, long a6);

static __inline long __emulate_syscall(long n, long a1, long a2, long a3, long a4, long a5, long a6) {
  switch(n) {
    case (SYS_restart_syscall): return emulate_SYS_restart_syscall(a1, a2, a3, a4, a5, a6);
    case (SYS_exit): return emulate_SYS_exit(a1, a2, a3, a4, a5, a6);
    case (SYS_fork): return emulate_SYS_fork(a1, a2, a3, a4, a5, a6);
    case (SYS_read): return emulate_SYS_read(a1, a2, a3, a4, a5, a6);
    case (SYS_write): return emulate_SYS_write(a1, a2, a3, a4, a5, a6);
    case (SYS_open): return emulate_SYS_open(a1, a2, a3, a4, a5, a6);
    case (SYS_close): return emulate_SYS_close(a1, a2, a3, a4, a5, a6);
    case (SYS_waitpid): return emulate_SYS_waitpid(a1, a2, a3, a4, a5, a6);
    case (SYS_creat): return emulate_SYS_creat(a1, a2, a3, a4, a5, a6);
    case (SYS_link): return emulate_SYS_link(a1, a2, a3, a4, a5, a6);
    case (SYS_unlink): return emulate_SYS_unlink(a1, a2, a3, a4, a5, a6);
    case (SYS_execve): return emulate_SYS_execve(a1, a2, a3, a4, a5, a6);
    case (SYS_chdir): return emulate_SYS_chdir(a1, a2, a3, a4, a5, a6);
    case (SYS_time): return emulate_SYS_time(a1, a2, a3, a4, a5, a6);
    case (SYS_mknod): return emulate_SYS_mknod(a1, a2, a3, a4, a5, a6);
    case (SYS_chmod): return emulate_SYS_chmod(a1, a2, a3, a4, a5, a6);
    case (SYS_lchown): return emulate_SYS_lchown(a1, a2, a3, a4, a5, a6);
    case (SYS_break): return emulate_SYS_break(a1, a2, a3, a4, a5, a6);
    case (SYS_oldstat): return emulate_SYS_oldstat(a1, a2, a3, a4, a5, a6);
    case (SYS_lseek): return emulate_SYS_lseek(a1, a2, a3, a4, a5, a6);
    case (SYS_getpid): return emulate_SYS_getpid(a1, a2, a3, a4, a5, a6);
    case (SYS_mount): return emulate_SYS_mount(a1, a2, a3, a4, a5, a6);
    case (SYS_umount): return emulate_SYS_umount(a1, a2, a3, a4, a5, a6);
    case (SYS_setuid): return emulate_SYS_setuid(a1, a2, a3, a4, a5, a6);
    case (SYS_getuid): return emulate_SYS_getuid(a1, a2, a3, a4, a5, a6);
    case (SYS_stime): return emulate_SYS_stime(a1, a2, a3, a4, a5, a6);
    case (SYS_ptrace): return emulate_SYS_ptrace(a1, a2, a3, a4, a5, a6);
    case (SYS_alarm): return emulate_SYS_alarm(a1, a2, a3, a4, a5, a6);
    case (SYS_oldfstat): return emulate_SYS_oldfstat(a1, a2, a3, a4, a5, a6);
    case (SYS_pause): return emulate_SYS_pause(a1, a2, a3, a4, a5, a6);
    case (SYS_utime): return emulate_SYS_utime(a1, a2, a3, a4, a5, a6);
    case (SYS_stty): return emulate_SYS_stty(a1, a2, a3, a4, a5, a6);
    case (SYS_gtty): return emulate_SYS_gtty(a1, a2, a3, a4, a5, a6);
    case (SYS_access): return emulate_SYS_access(a1, a2, a3, a4, a5, a6);
    case (SYS_nice): return emulate_SYS_nice(a1, a2, a3, a4, a5, a6);
    case (SYS_ftime): return emulate_SYS_ftime(a1, a2, a3, a4, a5, a6);
    case (SYS_sync): return emulate_SYS_sync(a1, a2, a3, a4, a5, a6);
    case (SYS_kill): return emulate_SYS_kill(a1, a2, a3, a4, a5, a6);
    case (SYS_rename): return emulate_SYS_rename(a1, a2, a3, a4, a5, a6);
    case (SYS_mkdir): return emulate_SYS_mkdir(a1, a2, a3, a4, a5, a6);
    case (SYS_rmdir): return emulate_SYS_rmdir(a1, a2, a3, a4, a5, a6);
    case (SYS_dup): return emulate_SYS_dup(a1, a2, a3, a4, a5, a6);
    case (SYS_pipe): return emulate_SYS_pipe(a1, a2, a3, a4, a5, a6);
    case (SYS_times): return emulate_SYS_times(a1, a2, a3, a4, a5, a6);
    case (SYS_prof): return emulate_SYS_prof(a1, a2, a3, a4, a5, a6);
    case (SYS_brk): return emulate_SYS_brk(a1, a2, a3, a4, a5, a6);
    case (SYS_setgid): return emulate_SYS_setgid(a1, a2, a3, a4, a5, a6);
    case (SYS_getgid): return emulate_SYS_getgid(a1, a2, a3, a4, a5, a6);
    case (SYS_signal): return emulate_SYS_signal(a1, a2, a3, a4, a5, a6);
    case (SYS_geteuid): return emulate_SYS_geteuid(a1, a2, a3, a4, a5, a6);
    case (SYS_getegid): return emulate_SYS_getegid(a1, a2, a3, a4, a5, a6);
    case (SYS_acct): return emulate_SYS_acct(a1, a2, a3, a4, a5, a6);
    case (SYS_umount2): return emulate_SYS_umount2(a1, a2, a3, a4, a5, a6);
    case (SYS_lock): return emulate_SYS_lock(a1, a2, a3, a4, a5, a6);
    case (SYS_ioctl): return emulate_SYS_ioctl(a1, a2, a3, a4, a5, a6);
    case (SYS_fcntl): return emulate_SYS_fcntl(a1, a2, a3, a4, a5, a6);
    case (SYS_mpx): return emulate_SYS_mpx(a1, a2, a3, a4, a5, a6);
    case (SYS_setpgid): return emulate_SYS_setpgid(a1, a2, a3, a4, a5, a6);
    case (SYS_ulimit): return emulate_SYS_ulimit(a1, a2, a3, a4, a5, a6);
    case (SYS_oldolduname): return emulate_SYS_oldolduname(a1, a2, a3, a4, a5, a6);
    case (SYS_umask): return emulate_SYS_umask(a1, a2, a3, a4, a5, a6);
    case (SYS_chroot): return emulate_SYS_chroot(a1, a2, a3, a4, a5, a6);
    case (SYS_ustat): return emulate_SYS_ustat(a1, a2, a3, a4, a5, a6);
    case (SYS_dup2): return emulate_SYS_dup2(a1, a2, a3, a4, a5, a6);
    case (SYS_getppid): return emulate_SYS_getppid(a1, a2, a3, a4, a5, a6);
    case (SYS_getpgrp): return emulate_SYS_getpgrp(a1, a2, a3, a4, a5, a6);
    case (SYS_setsid): return emulate_SYS_setsid(a1, a2, a3, a4, a5, a6);
    case (SYS_sigaction): return emulate_SYS_sigaction(a1, a2, a3, a4, a5, a6);
    case (SYS_sgetmask): return emulate_SYS_sgetmask(a1, a2, a3, a4, a5, a6);
    case (SYS_ssetmask): return emulate_SYS_ssetmask(a1, a2, a3, a4, a5, a6);
    case (SYS_setreuid): return emulate_SYS_setreuid(a1, a2, a3, a4, a5, a6);
    case (SYS_setregid): return emulate_SYS_setregid(a1, a2, a3, a4, a5, a6);
    case (SYS_sigsuspend): return emulate_SYS_sigsuspend(a1, a2, a3, a4, a5, a6);
    case (SYS_sigpending): return emulate_SYS_sigpending(a1, a2, a3, a4, a5, a6);
    case (SYS_sethostname): return emulate_SYS_sethostname(a1, a2, a3, a4, a5, a6);
    case (SYS_setrlimit): return emulate_SYS_setrlimit(a1, a2, a3, a4, a5, a6);
    case (SYS_getrlimit): return emulate_SYS_getrlimit(a1, a2, a3, a4, a5, a6);
    case (SYS_getrusage): return emulate_SYS_getrusage(a1, a2, a3, a4, a5, a6);
    case (SYS_gettimeofday): return emulate_SYS_gettimeofday(a1, a2, a3, a4, a5, a6);
    case (SYS_settimeofday): return emulate_SYS_settimeofday(a1, a2, a3, a4, a5, a6);
    case (SYS_getgroups): return emulate_SYS_getgroups(a1, a2, a3, a4, a5, a6);
    case (SYS_setgroups): return emulate_SYS_setgroups(a1, a2, a3, a4, a5, a6);
    case (SYS_select): return emulate_SYS_select(a1, a2, a3, a4, a5, a6);
    case (SYS_symlink): return emulate_SYS_symlink(a1, a2, a3, a4, a5, a6);
    case (SYS_oldlstat): return emulate_SYS_oldlstat(a1, a2, a3, a4, a5, a6);
    case (SYS_readlink): return emulate_SYS_readlink(a1, a2, a3, a4, a5, a6);
    case (SYS_uselib): return emulate_SYS_uselib(a1, a2, a3, a4, a5, a6);
    case (SYS_swapon): return emulate_SYS_swapon(a1, a2, a3, a4, a5, a6);
    case (SYS_reboot): return emulate_SYS_reboot(a1, a2, a3, a4, a5, a6);
    case (SYS_readdir): return emulate_SYS_readdir(a1, a2, a3, a4, a5, a6);
    case (SYS_mmap): return emulate_SYS_mmap(a1, a2, a3, a4, a5, a6);
    case (SYS_munmap): return emulate_SYS_munmap(a1, a2, a3, a4, a5, a6);
    case (SYS_truncate): return emulate_SYS_truncate(a1, a2, a3, a4, a5, a6);
    case (SYS_ftruncate): return emulate_SYS_ftruncate(a1, a2, a3, a4, a5, a6);
    case (SYS_fchmod): return emulate_SYS_fchmod(a1, a2, a3, a4, a5, a6);
    case (SYS_fchown): return emulate_SYS_fchown(a1, a2, a3, a4, a5, a6);
    case (SYS_getpriority): return emulate_SYS_getpriority(a1, a2, a3, a4, a5, a6);
    case (SYS_setpriority): return emulate_SYS_setpriority(a1, a2, a3, a4, a5, a6);
    case (SYS_profil): return emulate_SYS_profil(a1, a2, a3, a4, a5, a6);
    case (SYS_statfs): return emulate_SYS_statfs(a1, a2, a3, a4, a5, a6);
    case (SYS_fstatfs): return emulate_SYS_fstatfs(a1, a2, a3, a4, a5, a6);
    case (SYS_ioperm): return emulate_SYS_ioperm(a1, a2, a3, a4, a5, a6);
    case (SYS_socketcall): return emulate_SYS_socketcall(a1, a2, a3, a4, a5, a6);
    case (SYS_syslog): return emulate_SYS_syslog(a1, a2, a3, a4, a5, a6);
    case (SYS_setitimer): return emulate_SYS_setitimer(a1, a2, a3, a4, a5, a6);
    case (SYS_getitimer): return emulate_SYS_getitimer(a1, a2, a3, a4, a5, a6);
    case (SYS_stat): return emulate_SYS_stat(a1, a2, a3, a4, a5, a6);
    case (SYS_lstat): return emulate_SYS_lstat(a1, a2, a3, a4, a5, a6);
    case (SYS_fstat): return emulate_SYS_fstat(a1, a2, a3, a4, a5, a6);
    case (SYS_olduname): return emulate_SYS_olduname(a1, a2, a3, a4, a5, a6);
    case (SYS_iopl): return emulate_SYS_iopl(a1, a2, a3, a4, a5, a6);
    case (SYS_vhangup): return emulate_SYS_vhangup(a1, a2, a3, a4, a5, a6);
    case (SYS_idle): return emulate_SYS_idle(a1, a2, a3, a4, a5, a6);
    case (SYS_vm86old): return emulate_SYS_vm86old(a1, a2, a3, a4, a5, a6);
    case (SYS_wait4): return emulate_SYS_wait4(a1, a2, a3, a4, a5, a6);
    case (SYS_swapoff): return emulate_SYS_swapoff(a1, a2, a3, a4, a5, a6);
    case (SYS_sysinfo): return emulate_SYS_sysinfo(a1, a2, a3, a4, a5, a6);
    case (SYS_ipc): return emulate_SYS_ipc(a1, a2, a3, a4, a5, a6);
    case (SYS_fsync): return emulate_SYS_fsync(a1, a2, a3, a4, a5, a6);
    case (SYS_sigreturn): return emulate_SYS_sigreturn(a1, a2, a3, a4, a5, a6);
    case (SYS_clone): return emulate_SYS_clone(a1, a2, a3, a4, a5, a6);
    case (SYS_setdomainname): return emulate_SYS_setdomainname(a1, a2, a3, a4, a5, a6);
    case (SYS_uname): return emulate_SYS_uname(a1, a2, a3, a4, a5, a6);
    case (SYS_modify_ldt): return emulate_SYS_modify_ldt(a1, a2, a3, a4, a5, a6);
    case (SYS_adjtimex): return emulate_SYS_adjtimex(a1, a2, a3, a4, a5, a6);
    case (SYS_mprotect): return emulate_SYS_mprotect(a1, a2, a3, a4, a5, a6);
    case (SYS_sigprocmask): return emulate_SYS_sigprocmask(a1, a2, a3, a4, a5, a6);
    case (SYS_create_module): return emulate_SYS_create_module(a1, a2, a3, a4, a5, a6);
    case (SYS_init_module): return emulate_SYS_init_module(a1, a2, a3, a4, a5, a6);
    case (SYS_delete_module): return emulate_SYS_delete_module(a1, a2, a3, a4, a5, a6);
    case (SYS_get_kernel_syms): return emulate_SYS_get_kernel_syms(a1, a2, a3, a4, a5, a6);
    case (SYS_quotactl): return emulate_SYS_quotactl(a1, a2, a3, a4, a5, a6);
    case (SYS_getpgid): return emulate_SYS_getpgid(a1, a2, a3, a4, a5, a6);
    case (SYS_fchdir): return emulate_SYS_fchdir(a1, a2, a3, a4, a5, a6);
    case (SYS_bdflush): return emulate_SYS_bdflush(a1, a2, a3, a4, a5, a6);
    case (SYS_sysfs): return emulate_SYS_sysfs(a1, a2, a3, a4, a5, a6);
    case (SYS_personality): return emulate_SYS_personality(a1, a2, a3, a4, a5, a6);
    case (SYS_afs_syscall): return emulate_SYS_afs_syscall(a1, a2, a3, a4, a5, a6);
    case (SYS_setfsuid): return emulate_SYS_setfsuid(a1, a2, a3, a4, a5, a6);
    case (SYS_setfsgid): return emulate_SYS_setfsgid(a1, a2, a3, a4, a5, a6);
    case (SYS__llseek): return emulate_SYS__llseek(a1, a2, a3, a4, a5, a6);
    case (SYS_getdents): return emulate_SYS_getdents(a1, a2, a3, a4, a5, a6);
    case (SYS__newselect): return emulate_SYS__newselect(a1, a2, a3, a4, a5, a6);
    case (SYS_flock): return emulate_SYS_flock(a1, a2, a3, a4, a5, a6);
    case (SYS_msync): return emulate_SYS_msync(a1, a2, a3, a4, a5, a6);
    case (SYS_readv): return emulate_SYS_readv(a1, a2, a3, a4, a5, a6);
    case (SYS_writev): return emulate_SYS_writev(a1, a2, a3, a4, a5, a6);
    case (SYS_getsid): return emulate_SYS_getsid(a1, a2, a3, a4, a5, a6);
    case (SYS_fdatasync): return emulate_SYS_fdatasync(a1, a2, a3, a4, a5, a6);
    case (SYS__sysctl): return emulate_SYS__sysctl(a1, a2, a3, a4, a5, a6);
    case (SYS_mlock): return emulate_SYS_mlock(a1, a2, a3, a4, a5, a6);
    case (SYS_munlock): return emulate_SYS_munlock(a1, a2, a3, a4, a5, a6);
    case (SYS_mlockall): return emulate_SYS_mlockall(a1, a2, a3, a4, a5, a6);
    case (SYS_munlockall): return emulate_SYS_munlockall(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_setparam): return emulate_SYS_sched_setparam(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_getparam): return emulate_SYS_sched_getparam(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_setscheduler): return emulate_SYS_sched_setscheduler(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_getscheduler): return emulate_SYS_sched_getscheduler(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_yield): return emulate_SYS_sched_yield(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_get_priority_max): return emulate_SYS_sched_get_priority_max(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_get_priority_min): return emulate_SYS_sched_get_priority_min(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_rr_get_interval): return emulate_SYS_sched_rr_get_interval(a1, a2, a3, a4, a5, a6);
    case (SYS_nanosleep): return emulate_SYS_nanosleep(a1, a2, a3, a4, a5, a6);
    case (SYS_mremap): return emulate_SYS_mremap(a1, a2, a3, a4, a5, a6);
    case (SYS_setresuid): return emulate_SYS_setresuid(a1, a2, a3, a4, a5, a6);
    case (SYS_getresuid): return emulate_SYS_getresuid(a1, a2, a3, a4, a5, a6);
    case (SYS_vm86): return emulate_SYS_vm86(a1, a2, a3, a4, a5, a6);
    case (SYS_query_module): return emulate_SYS_query_module(a1, a2, a3, a4, a5, a6);
    case (SYS_poll): return emulate_SYS_poll(a1, a2, a3, a4, a5, a6);
    case (SYS_nfsservctl): return emulate_SYS_nfsservctl(a1, a2, a3, a4, a5, a6);
    case (SYS_setresgid): return emulate_SYS_setresgid(a1, a2, a3, a4, a5, a6);
    case (SYS_getresgid): return emulate_SYS_getresgid(a1, a2, a3, a4, a5, a6);
    case (SYS_prctl): return emulate_SYS_prctl(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigreturn): return emulate_SYS_rt_sigreturn(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigaction): return emulate_SYS_rt_sigaction(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigprocmask): return emulate_SYS_rt_sigprocmask(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigpending): return emulate_SYS_rt_sigpending(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigtimedwait): return emulate_SYS_rt_sigtimedwait(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigqueueinfo): return emulate_SYS_rt_sigqueueinfo(a1, a2, a3, a4, a5, a6);
    case (SYS_rt_sigsuspend): return emulate_SYS_rt_sigsuspend(a1, a2, a3, a4, a5, a6);
    case (SYS_pread64): return emulate_SYS_pread64(a1, a2, a3, a4, a5, a6);
    case (SYS_pwrite64): return emulate_SYS_pwrite64(a1, a2, a3, a4, a5, a6);
    case (SYS_chown): return emulate_SYS_chown(a1, a2, a3, a4, a5, a6);
    case (SYS_getcwd): return emulate_SYS_getcwd(a1, a2, a3, a4, a5, a6);
    case (SYS_capget): return emulate_SYS_capget(a1, a2, a3, a4, a5, a6);
    case (SYS_capset): return emulate_SYS_capset(a1, a2, a3, a4, a5, a6);
    case (SYS_sigaltstack): return emulate_SYS_sigaltstack(a1, a2, a3, a4, a5, a6);
    case (SYS_sendfile): return emulate_SYS_sendfile(a1, a2, a3, a4, a5, a6);
    case (SYS_getpmsg): return emulate_SYS_getpmsg(a1, a2, a3, a4, a5, a6);
    case (SYS_putpmsg): return emulate_SYS_putpmsg(a1, a2, a3, a4, a5, a6);
    case (SYS_vfork): return emulate_SYS_vfork(a1, a2, a3, a4, a5, a6);
    case (SYS_ugetrlimit): return emulate_SYS_ugetrlimit(a1, a2, a3, a4, a5, a6);
    case (SYS_mmap2): return emulate_SYS_mmap2(a1, a2, a3, a4, a5, a6);
    case (SYS_truncate64): return emulate_SYS_truncate64(a1, a2, a3, a4, a5, a6);
    case (SYS_ftruncate64): return emulate_SYS_ftruncate64(a1, a2, a3, a4, a5, a6);
    case (SYS_stat64): return emulate_SYS_stat64(a1, a2, a3, a4, a5, a6);
    case (SYS_lstat64): return emulate_SYS_lstat64(a1, a2, a3, a4, a5, a6);
    case (SYS_fstat64): return emulate_SYS_fstat64(a1, a2, a3, a4, a5, a6);
    case (SYS_lchown32): return emulate_SYS_lchown32(a1, a2, a3, a4, a5, a6);
    case (SYS_getuid32): return emulate_SYS_getuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_getgid32): return emulate_SYS_getgid32(a1, a2, a3, a4, a5, a6);
    case (SYS_geteuid32): return emulate_SYS_geteuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_getegid32): return emulate_SYS_getegid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setreuid32): return emulate_SYS_setreuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setregid32): return emulate_SYS_setregid32(a1, a2, a3, a4, a5, a6);
    case (SYS_getgroups32): return emulate_SYS_getgroups32(a1, a2, a3, a4, a5, a6);
    case (SYS_setgroups32): return emulate_SYS_setgroups32(a1, a2, a3, a4, a5, a6);
    case (SYS_fchown32): return emulate_SYS_fchown32(a1, a2, a3, a4, a5, a6);
    case (SYS_setresuid32): return emulate_SYS_setresuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_getresuid32): return emulate_SYS_getresuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setresgid32): return emulate_SYS_setresgid32(a1, a2, a3, a4, a5, a6);
    case (SYS_getresgid32): return emulate_SYS_getresgid32(a1, a2, a3, a4, a5, a6);
    case (SYS_chown32): return emulate_SYS_chown32(a1, a2, a3, a4, a5, a6);
    case (SYS_setuid32): return emulate_SYS_setuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setgid32): return emulate_SYS_setgid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setfsuid32): return emulate_SYS_setfsuid32(a1, a2, a3, a4, a5, a6);
    case (SYS_setfsgid32): return emulate_SYS_setfsgid32(a1, a2, a3, a4, a5, a6);
    case (SYS_pivot_root): return emulate_SYS_pivot_root(a1, a2, a3, a4, a5, a6);
    case (SYS_mincore): return emulate_SYS_mincore(a1, a2, a3, a4, a5, a6);
    case (SYS_madvise): return emulate_SYS_madvise(a1, a2, a3, a4, a5, a6);
    case (SYS_getdents64): return emulate_SYS_getdents64(a1, a2, a3, a4, a5, a6);
    case (SYS_fcntl64): return emulate_SYS_fcntl64(a1, a2, a3, a4, a5, a6);
    case (SYS_gettid): return emulate_SYS_gettid(a1, a2, a3, a4, a5, a6);
    case (SYS_readahead): return emulate_SYS_readahead(a1, a2, a3, a4, a5, a6);
    case (SYS_setxattr): return emulate_SYS_setxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_lsetxattr): return emulate_SYS_lsetxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_fsetxattr): return emulate_SYS_fsetxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_getxattr): return emulate_SYS_getxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_lgetxattr): return emulate_SYS_lgetxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_fgetxattr): return emulate_SYS_fgetxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_listxattr): return emulate_SYS_listxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_llistxattr): return emulate_SYS_llistxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_flistxattr): return emulate_SYS_flistxattr(a1, a2, a3, a4, a5, a6);
    case (SYS_removexattr): return emulate_SYS_removexattr(a1, a2, a3, a4, a5, a6);
    case (SYS_lremovexattr): return emulate_SYS_lremovexattr(a1, a2, a3, a4, a5, a6);
    case (SYS_fremovexattr): return emulate_SYS_fremovexattr(a1, a2, a3, a4, a5, a6);
    case (SYS_tkill): return emulate_SYS_tkill(a1, a2, a3, a4, a5, a6);
    case (SYS_sendfile64): return emulate_SYS_sendfile64(a1, a2, a3, a4, a5, a6);
    case (SYS_futex): return emulate_SYS_futex(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_setaffinity): return emulate_SYS_sched_setaffinity(a1, a2, a3, a4, a5, a6);
    case (SYS_sched_getaffinity): return emulate_SYS_sched_getaffinity(a1, a2, a3, a4, a5, a6);
    case (SYS_set_thread_area): return emulate_SYS_set_thread_area(a1, a2, a3, a4, a5, a6);
    case (SYS_get_thread_area): return emulate_SYS_get_thread_area(a1, a2, a3, a4, a5, a6);
    case (SYS_io_setup): return emulate_SYS_io_setup(a1, a2, a3, a4, a5, a6);
    case (SYS_io_destroy): return emulate_SYS_io_destroy(a1, a2, a3, a4, a5, a6);
    case (SYS_io_getevents): return emulate_SYS_io_getevents(a1, a2, a3, a4, a5, a6);
    case (SYS_io_submit): return emulate_SYS_io_submit(a1, a2, a3, a4, a5, a6);
    case (SYS_io_cancel): return emulate_SYS_io_cancel(a1, a2, a3, a4, a5, a6);
    case (SYS_fadvise64): return emulate_SYS_fadvise64(a1, a2, a3, a4, a5, a6);
    case (SYS_exit_group): return emulate_SYS_exit_group(a1, a2, a3, a4, a5, a6);
    case (SYS_lookup_dcookie): return emulate_SYS_lookup_dcookie(a1, a2, a3, a4, a5, a6);
    case (SYS_epoll_create): return emulate_SYS_epoll_create(a1, a2, a3, a4, a5, a6);
    case (SYS_epoll_ctl): return emulate_SYS_epoll_ctl(a1, a2, a3, a4, a5, a6);
    case (SYS_epoll_wait): return emulate_SYS_epoll_wait(a1, a2, a3, a4, a5, a6);
    case (SYS_remap_file_pages): return emulate_SYS_remap_file_pages(a1, a2, a3, a4, a5, a6);
    case (SYS_set_tid_address): return emulate_SYS_set_tid_address(a1, a2, a3, a4, a5, a6);
    case (SYS_timer_create): return emulate_SYS_timer_create(a1, a2, a3, a4, a5, a6);
    case (SYS_timer_settime): return emulate_SYS_timer_settime(a1, a2, a3, a4, a5, a6);
    case (SYS_timer_gettime): return emulate_SYS_timer_gettime(a1, a2, a3, a4, a5, a6);
    case (SYS_timer_getoverrun): return emulate_SYS_timer_getoverrun(a1, a2, a3, a4, a5, a6);
    case (SYS_timer_delete): return emulate_SYS_timer_delete(a1, a2, a3, a4, a5, a6);
    case (SYS_clock_settime): return emulate_SYS_clock_settime(a1, a2, a3, a4, a5, a6);
    case (SYS_clock_gettime): return emulate_SYS_clock_gettime(a1, a2, a3, a4, a5, a6);
    case (SYS_clock_getres): return emulate_SYS_clock_getres(a1, a2, a3, a4, a5, a6);
    case (SYS_clock_nanosleep): return emulate_SYS_clock_nanosleep(a1, a2, a3, a4, a5, a6);
    case (SYS_statfs64): return emulate_SYS_statfs64(a1, a2, a3, a4, a5, a6);
    case (SYS_fstatfs64): return emulate_SYS_fstatfs64(a1, a2, a3, a4, a5, a6);
    case (SYS_tgkill): return emulate_SYS_tgkill(a1, a2, a3, a4, a5, a6);
    case (SYS_utimes): return emulate_SYS_utimes(a1, a2, a3, a4, a5, a6);
    case (SYS_fadvise64_64): return emulate_SYS_fadvise64_64(a1, a2, a3, a4, a5, a6);
    case (SYS_vserver): return emulate_SYS_vserver(a1, a2, a3, a4, a5, a6);
    case (SYS_mbind): return emulate_SYS_mbind(a1, a2, a3, a4, a5, a6);
    case (SYS_get_mempolicy): return emulate_SYS_get_mempolicy(a1, a2, a3, a4, a5, a6);
    case (SYS_set_mempolicy): return emulate_SYS_set_mempolicy(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_open): return emulate_SYS_mq_open(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_unlink): return emulate_SYS_mq_unlink(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_timedsend): return emulate_SYS_mq_timedsend(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_timedreceive): return emulate_SYS_mq_timedreceive(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_notify): return emulate_SYS_mq_notify(a1, a2, a3, a4, a5, a6);
    case (SYS_mq_getsetattr): return emulate_SYS_mq_getsetattr(a1, a2, a3, a4, a5, a6);
    case (SYS_kexec_load): return emulate_SYS_kexec_load(a1, a2, a3, a4, a5, a6);
    case (SYS_waitid): return emulate_SYS_waitid(a1, a2, a3, a4, a5, a6);
    case (SYS_add_key): return emulate_SYS_add_key(a1, a2, a3, a4, a5, a6);
    case (SYS_request_key): return emulate_SYS_request_key(a1, a2, a3, a4, a5, a6);
    case (SYS_keyctl): return emulate_SYS_keyctl(a1, a2, a3, a4, a5, a6);
    case (SYS_ioprio_set): return emulate_SYS_ioprio_set(a1, a2, a3, a4, a5, a6);
    case (SYS_ioprio_get): return emulate_SYS_ioprio_get(a1, a2, a3, a4, a5, a6);
    case (SYS_inotify_init): return emulate_SYS_inotify_init(a1, a2, a3, a4, a5, a6);
    case (SYS_inotify_add_watch): return emulate_SYS_inotify_add_watch(a1, a2, a3, a4, a5, a6);
    case (SYS_inotify_rm_watch): return emulate_SYS_inotify_rm_watch(a1, a2, a3, a4, a5, a6);
    case (SYS_migrate_pages): return emulate_SYS_migrate_pages(a1, a2, a3, a4, a5, a6);
    case (SYS_openat): return emulate_SYS_openat(a1, a2, a3, a4, a5, a6);
    case (SYS_mkdirat): return emulate_SYS_mkdirat(a1, a2, a3, a4, a5, a6);
    case (SYS_mknodat): return emulate_SYS_mknodat(a1, a2, a3, a4, a5, a6);
    case (SYS_fchownat): return emulate_SYS_fchownat(a1, a2, a3, a4, a5, a6);
    case (SYS_futimesat): return emulate_SYS_futimesat(a1, a2, a3, a4, a5, a6);
    case (SYS_fstatat64): return emulate_SYS_fstatat64(a1, a2, a3, a4, a5, a6);
    case (SYS_unlinkat): return emulate_SYS_unlinkat(a1, a2, a3, a4, a5, a6);
    case (SYS_renameat): return emulate_SYS_renameat(a1, a2, a3, a4, a5, a6);
    case (SYS_linkat): return emulate_SYS_linkat(a1, a2, a3, a4, a5, a6);
    case (SYS_symlinkat): return emulate_SYS_symlinkat(a1, a2, a3, a4, a5, a6);
    case (SYS_readlinkat): return emulate_SYS_readlinkat(a1, a2, a3, a4, a5, a6);
    case (SYS_fchmodat): return emulate_SYS_fchmodat(a1, a2, a3, a4, a5, a6);
    case (SYS_faccessat): return emulate_SYS_faccessat(a1, a2, a3, a4, a5, a6);
    case (SYS_pselect6): return emulate_SYS_pselect6(a1, a2, a3, a4, a5, a6);
    case (SYS_ppoll): return emulate_SYS_ppoll(a1, a2, a3, a4, a5, a6);
    case (SYS_unshare): return emulate_SYS_unshare(a1, a2, a3, a4, a5, a6);
    case (SYS_set_robust_list): return emulate_SYS_set_robust_list(a1, a2, a3, a4, a5, a6);
    case (SYS_get_robust_list): return emulate_SYS_get_robust_list(a1, a2, a3, a4, a5, a6);
    case (SYS_splice): return emulate_SYS_splice(a1, a2, a3, a4, a5, a6);
    case (SYS_sync_file_range): return emulate_SYS_sync_file_range(a1, a2, a3, a4, a5, a6);
    case (SYS_tee): return emulate_SYS_tee(a1, a2, a3, a4, a5, a6);
    case (SYS_vmsplice): return emulate_SYS_vmsplice(a1, a2, a3, a4, a5, a6);
    case (SYS_move_pages): return emulate_SYS_move_pages(a1, a2, a3, a4, a5, a6);
    case (SYS_getcpu): return emulate_SYS_getcpu(a1, a2, a3, a4, a5, a6);
    case (SYS_epoll_pwait): return emulate_SYS_epoll_pwait(a1, a2, a3, a4, a5, a6);
    case (SYS_utimensat): return emulate_SYS_utimensat(a1, a2, a3, a4, a5, a6);
    case (SYS_signalfd): return emulate_SYS_signalfd(a1, a2, a3, a4, a5, a6);
    case (SYS_timerfd_create): return emulate_SYS_timerfd_create(a1, a2, a3, a4, a5, a6);
    case (SYS_eventfd): return emulate_SYS_eventfd(a1, a2, a3, a4, a5, a6);
    case (SYS_fallocate): return emulate_SYS_fallocate(a1, a2, a3, a4, a5, a6);
    case (SYS_timerfd_settime): return emulate_SYS_timerfd_settime(a1, a2, a3, a4, a5, a6);
    case (SYS_timerfd_gettime): return emulate_SYS_timerfd_gettime(a1, a2, a3, a4, a5, a6);
    case (SYS_signalfd4): return emulate_SYS_signalfd4(a1, a2, a3, a4, a5, a6);
    case (SYS_eventfd2): return emulate_SYS_eventfd2(a1, a2, a3, a4, a5, a6);
    case (SYS_epoll_create1): return emulate_SYS_epoll_create1(a1, a2, a3, a4, a5, a6);
    case (SYS_dup3): return emulate_SYS_dup3(a1, a2, a3, a4, a5, a6);
    case (SYS_pipe2): return emulate_SYS_pipe2(a1, a2, a3, a4, a5, a6);
    case (SYS_inotify_init1): return emulate_SYS_inotify_init1(a1, a2, a3, a4, a5, a6);
    case (SYS_preadv): return emulate_SYS_preadv(a1, a2, a3, a4, a5, a6);
    case (SYS_pwritev): return emulate_SYS_pwritev(a1, a2, a3, a4, a5, a6);
    case (SYS_prlimit64): return emulate_SYS_prlimit64(a1, a2, a3, a4, a5, a6);
    case (SYS_name_to_handle_at): return emulate_SYS_name_to_handle_at(a1, a2, a3, a4, a5, a6);
    case (SYS_open_by_handle_at): return emulate_SYS_open_by_handle_at(a1, a2, a3, a4, a5, a6);
    case (SYS_clock_adjtime): return emulate_SYS_clock_adjtime(a1, a2, a3, a4, a5, a6);
    case (SYS_syncfs): return emulate_SYS_syncfs(a1, a2, a3, a4, a5, a6);
    case (SYS_sendmmsg): return emulate_SYS_sendmmsg(a1, a2, a3, a4, a5, a6);
    case (SYS_setns): return emulate_SYS_setns(a1, a2, a3, a4, a5, a6);
    case (SYS_process_vm_readv): return emulate_SYS_process_vm_readv(a1, a2, a3, a4, a5, a6);
    case (SYS_process_vm_writev): return emulate_SYS_process_vm_writev(a1, a2, a3, a4, a5, a6);
    case (SYS_kcmp): return emulate_SYS_kcmp(a1, a2, a3, a4, a5, a6);
    case (SYS_finit_module): return emulate_SYS_finit_module(a1, a2, a3, a4, a5, a6);
  }
  EM_ASM({Module.printErr('Someone try to call unknown syscall number', $0); abort(-1); }, n);
  return -1; // Will never happen
}
